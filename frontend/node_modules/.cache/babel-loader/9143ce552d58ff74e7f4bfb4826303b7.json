{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tinycolor2_1 = __importDefault(require(\"tinycolor2\"));\n\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 5; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 5; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = Math.round(hsv.s * 100) - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = Math.round(hsv.s * 100) + saturationStep;\n  } else {\n    saturation = Math.round(hsv.s * 100) + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 100) {\n    saturation = 100;\n  } // 第一格的 s 限制在 6-10 之间\n\n\n  if (light && i === lightColorCount && saturation > 10) {\n    saturation = 10;\n  }\n\n  if (saturation < 6) {\n    saturation = 6;\n  }\n\n  return saturation;\n}\n\nfunction getValue(hsv, i, light) {\n  if (light) {\n    return Math.round(hsv.v * 100) + brightnessStep1 * i;\n  }\n\n  return Math.round(hsv.v * 100) - brightnessStep2 * i;\n}\n\nfunction generate(color, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var patterns = [];\n  var pColor = tinycolor2_1.default(color);\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = pColor.toHsv();\n    var colorString = tinycolor2_1.default({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }).toHexString();\n    patterns.push(colorString);\n  }\n\n  patterns.push(pColor.toHexString());\n\n  for (var i = 1; i <= darkColorCount; i += 1) {\n    var hsv = pColor.toHsv();\n    var colorString = tinycolor2_1.default({\n      h: getHue(hsv, i),\n      s: getSaturation(hsv, i),\n      v: getValue(hsv, i)\n    }).toHexString();\n    patterns.push(colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_a) {\n      var index = _a.index,\n          opacity = _a.opacity;\n      var darkColorString = tinycolor2_1.default.mix(opts.backgroundColor || '#141414', patterns[index], opacity * 100).toHexString();\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}\n\nexports.default = generate;","map":{"version":3,"sources":["/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/@ant-design/colors/lib/generate.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","tinycolor2_1","require","hueStep","saturationStep","saturationStep2","brightnessStep1","brightnessStep2","lightColorCount","darkColorCount","darkColorMap","index","opacity","getHue","hsv","i","light","hue","Math","round","h","getSaturation","s","saturation","getValue","v","generate","color","opts","patterns","pColor","default","toHsv","colorString","toHexString","push","theme","map","_a","darkColorString","mix","backgroundColor"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tinycolor2_1 = __importDefault(require(\"tinycolor2\"));\nvar hueStep = 2; // 色相阶梯\nvar saturationStep = 16; // 饱和度阶梯，浅色部分\nvar saturationStep2 = 5; // 饱和度阶梯，深色部分\nvar brightnessStep1 = 5; // 亮度阶梯，浅色部分\nvar brightnessStep2 = 15; // 亮度阶梯，深色部分\nvar lightColorCount = 5; // 浅色数量，主色上\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\nvar darkColorMap = [\n    { index: 7, opacity: 0.15 },\n    { index: 6, opacity: 0.25 },\n    { index: 5, opacity: 0.3 },\n    { index: 5, opacity: 0.45 },\n    { index: 5, opacity: 0.65 },\n    { index: 5, opacity: 0.85 },\n    { index: 4, opacity: 0.9 },\n    { index: 3, opacity: 0.95 },\n    { index: 2, opacity: 0.97 },\n    { index: 1, opacity: 0.98 },\n];\nfunction getHue(hsv, i, light) {\n    var hue;\n    // 根据色相不同，色相转向不同\n    if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n        hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n    }\n    else {\n        hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n    }\n    if (hue < 0) {\n        hue += 360;\n    }\n    else if (hue >= 360) {\n        hue -= 360;\n    }\n    return hue;\n}\nfunction getSaturation(hsv, i, light) {\n    // grey color don't change saturation\n    if (hsv.h === 0 && hsv.s === 0) {\n        return hsv.s;\n    }\n    var saturation;\n    if (light) {\n        saturation = Math.round(hsv.s * 100) - saturationStep * i;\n    }\n    else if (i === darkColorCount) {\n        saturation = Math.round(hsv.s * 100) + saturationStep;\n    }\n    else {\n        saturation = Math.round(hsv.s * 100) + saturationStep2 * i;\n    }\n    // 边界值修正\n    if (saturation > 100) {\n        saturation = 100;\n    }\n    // 第一格的 s 限制在 6-10 之间\n    if (light && i === lightColorCount && saturation > 10) {\n        saturation = 10;\n    }\n    if (saturation < 6) {\n        saturation = 6;\n    }\n    return saturation;\n}\nfunction getValue(hsv, i, light) {\n    if (light) {\n        return Math.round(hsv.v * 100) + brightnessStep1 * i;\n    }\n    return Math.round(hsv.v * 100) - brightnessStep2 * i;\n}\nfunction generate(color, opts) {\n    if (opts === void 0) { opts = {}; }\n    var patterns = [];\n    var pColor = tinycolor2_1.default(color);\n    for (var i = lightColorCount; i > 0; i -= 1) {\n        var hsv = pColor.toHsv();\n        var colorString = tinycolor2_1.default({\n            h: getHue(hsv, i, true),\n            s: getSaturation(hsv, i, true),\n            v: getValue(hsv, i, true),\n        }).toHexString();\n        patterns.push(colorString);\n    }\n    patterns.push(pColor.toHexString());\n    for (var i = 1; i <= darkColorCount; i += 1) {\n        var hsv = pColor.toHsv();\n        var colorString = tinycolor2_1.default({\n            h: getHue(hsv, i),\n            s: getSaturation(hsv, i),\n            v: getValue(hsv, i),\n        }).toHexString();\n        patterns.push(colorString);\n    }\n    // dark theme patterns\n    if (opts.theme === 'dark') {\n        return darkColorMap.map(function (_a) {\n            var index = _a.index, opacity = _a.opacity;\n            var darkColorString = tinycolor2_1.default\n                .mix(opts.backgroundColor || '#141414', patterns[index], opacity * 100)\n                .toHexString();\n            return darkColorString;\n        });\n    }\n    return patterns;\n}\nexports.default = generate;\n"]},"metadata":{},"sourceType":"script"}