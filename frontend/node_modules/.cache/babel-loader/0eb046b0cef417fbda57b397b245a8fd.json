{"ast":null,"code":"import\"antd/es/switch/style/css\";import _Switch from\"antd/es/switch\";import\"antd/es/radio/style/css\";import _Radio from\"antd/es/radio\";import\"antd/es/checkbox/style/css\";import _Checkbox from\"antd/es/checkbox\";import\"antd/es/slider/style/css\";import _Slider from\"antd/es/slider\";import\"antd/es/form/style/css\";import _Form from\"antd/es/form\";import\"antd/es/tooltip/style/css\";import _Tooltip from\"antd/es/tooltip\";import _defineProperty from\"/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import\"antd/es/select/style/css\";import _Select from\"antd/es/select\";import React,{PureComponent}from\"react\";import Covid19Graph from\"./covid19graph\";import Covid19Map from\"./covid19map\";import ModelAPI from\"./modelapi\";import{areaToStr,strToArea,modelToStr}from\"./covid19util\";import{test_data}from\"./test_data\";import{InfoCircleOutlined}from'@ant-design/icons';var Option=_Select.Option;var Covid19Predict=/*#__PURE__*/function(_PureComponent){_inherits(Covid19Predict,_PureComponent);var _super=_createSuper(Covid19Predict);function Covid19Predict(props){var _this;_classCallCheck(this,Covid19Predict);_this=_super.call(this,props);_this.handleYScaleSelect=function(e){_this.setState({yScale:e.target.value});};_this.handleStatisticSelect=function(e){_this.setState({statistic:e.target.value});};_this.bindRef=function(ref){_this.map=ref;};_this.formRef=React.createRef();_this.modelAPI=new ModelAPI();_this.modelAPI.areas(function(allAreas){return _this.setState({areasList:allAreas});});_this.modelAPI.models(function(allModels){return _this.setState({modelsList:allModels});});_this.state={areas:_this.props.areas||[],areasList:[],models:_this.props.models||[],modelsList:[],distancingOn:true,distancingOff:false,mainGraphData:{},days:10,dynamicMapOn:false,statistic:\"cumulative\",yScale:\"linear\"};_this.addAreaByStr=_this.addAreaByStr.bind(_assertThisInitialized(_this));_this.removeAreaByStr=_this.removeAreaByStr.bind(_assertThisInitialized(_this));_this.onValuesChange=_this.onValuesChange.bind(_assertThisInitialized(_this));_this.onMapClick=_this.onMapClick.bind(_assertThisInitialized(_this));_this.onDaysToPredictChange=_this.onDaysToPredictChange.bind(_assertThisInitialized(_this));_this.switchDynamicMap=_this.switchDynamicMap.bind(_assertThisInitialized(_this));return _this;}_createClass(Covid19Predict,[{key:\"onMapClick\",value:function onMapClick(area){if(!this.areaIsSelected(area)){this.addAreaByStr(areaToStr(area));}}/**\n   * Returns true if the area is already selected by the user.\n   */},{key:\"areaIsSelected\",value:function areaIsSelected(area){if(this.state.areas&&area){var newAreaStr=areaToStr(area);return this.state.areas.includes(newAreaStr);}return false;}},{key:\"addAreaByStr\",value:function addAreaByStr(areaStr){var _this2=this;var areaObj=strToArea(areaStr);this.setState(function(prevState){return{areas:[].concat(_toConsumableArray(prevState.areas),[areaStr])};},function(){_this2.modelAPI.predict({state:areaObj.state,country:areaObj.country,models:_this2.state.models,days:_this2.state.days,distancingOn:_this2.state.distancingOn,distancingOff:_this2.state.distancingOff},function(data){_this2.setState(function(prevState){return{mainGraphData:_objectSpread({},prevState.mainGraphData,_defineProperty({},areaStr,data))};});});_this2.formRef.current.setFieldsValue({areas:_this2.state.areas});});}},{key:\"removeAreaByStr\",value:function removeAreaByStr(targetAreaStr){this.setState(function(prevState){return{// Filter out the area / graph data corresponding to the target area\n// string.\nareas:prevState.areas.filter(function(areaStr){return areaStr!==targetAreaStr;}),mainGraphData:Object.keys(prevState.mainGraphData).filter(function(areaStr){return areaStr!=targetAreaStr;}).reduce(function(newMainGraphData,areaStr){return _objectSpread({},newMainGraphData,_defineProperty({},areaStr,prevState.mainGraphData[areaStr]));},{})};});}/**\n   * Returns true if the model is already selected by the user.\n   */},{key:\"modelIsSelected\",value:function modelIsSelected(model){if(this.state.models&&model){var newModelStr=modelToStr(model);return this.state.models.includes(newModelStr);}return false;}/**\n   * onValuesChange is called whenever the values in the form change. Note that\n   * days to predict is handled separately by onDaysToPredictChange.\n   */},{key:\"onValuesChange\",value:function onValuesChange(changedValues,allValues){var _this3=this;if(\"socialDistancing\"in changedValues||\"models\"in changedValues){// If either the social distancing or model parameters were changed, we\n// clear our data and do a full reload. We purposely ignore days to\n// predict here (see onDaysToPredictChange).\nthis.setState({models:allValues.models,distancingOn:allValues.socialDistancing.includes(\"distancingOn\"),distancingOff:allValues.socialDistancing.includes(\"distancingOff\")},function(){_this3.reloadAll();});}else{// If we're here it means the user either added or deleted an area, so we\n// can do a union / intersection to figure out what to add/remove.\nvar prevAreas=this.state.areas;var newAreas=allValues.areas;var areasToAdd=newAreas.filter(function(areaStr){return!prevAreas.includes(areaStr);});var areasToRemove=prevAreas.filter(function(areaStr){return!newAreas.includes(areaStr);});areasToAdd.forEach(this.addAreaByStr);areasToRemove.forEach(this.removeAreaByStr);}}/**\n   * onDaysToPredictChange is bound to the 'onAfterChange' prop for the\n   * slider component, so this function will only be called on the mouseup\n   * event (to reduce database load).\n   */},{key:\"onDaysToPredictChange\",value:function onDaysToPredictChange(days){var _this4=this;var prevAreas=this.state.areas;this.setState({days:days},function(){_this4.reloadAll();});}// Set the reference to the map component as a child-component.\n},{key:\"reloadAll\",/**\n   * reloadAll refreshes the prediction data for all currently-selected\n   * countries.\n   */value:function reloadAll(){var _this5=this;var prevAreas=this.state.areas;this.setState({areas:[],mainGraphData:{}},function(){// Add all the areas back.\nprevAreas.forEach(_this5.addAreaByStr);// TODO: Add code for stuff after reload here!\n// Force reload the heatmap\nif(_this5.state.dynamicMapOn&&_this5.state.models.length!==0){_this5.map.fetchData(_this5.state.dynamicMapOn);}});}},{key:\"switchDynamicMap\",value:function switchDynamicMap(checked){this.setState({dynamicMapOn:checked});this.map.fetchData(checked);}},{key:\"render\",value:function render(){var _this6=this;var _this$state=this.state,areas=_this$state.areas,areasList=_this$state.areasList,modelsList=_this$state.modelsList,days=_this$state.days,mainGraphData=_this$state.mainGraphData,dynamicMapOn=_this$state.dynamicMapOn,statistic=_this$state.statistic,yScale=_this$state.yScale;// Only show options for countries that have not been selected yet.\nvar countryOptions=areasList.filter(function(area){return!_this6.areaIsSelected(area);}).map(areaToStr).sort().map(function(s){return/*#__PURE__*/React.createElement(Option,{key:s},\" \",s,\" \");});var modelOptions=modelsList.filter(function(model){return!_this6.modelIsSelected(model);}).map(function(model){return/*#__PURE__*/React.createElement(Option,{key:model.name},/*#__PURE__*/React.createElement(_Tooltip,{title:model.description,placement:\"right\"},model.name));});return/*#__PURE__*/React.createElement(\"div\",{className:\"covid-19-predict\"},/*#__PURE__*/React.createElement(\"div\",{className:\"left-col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-wrapper\"},/*#__PURE__*/React.createElement(_Form,{ref:this.formRef,onValuesChange:this.onValuesChange,initialValues:{areas:areas,days:10,socialDistancing:[\"distancingOn\"]}},/*#__PURE__*/React.createElement(_Form.Item,{label:\"Areas\",name:\"areas\",rules:[{required:true,message:\"Please select areas!\"}]},/*#__PURE__*/React.createElement(_Select,{mode:\"multiple\",style:{width:\"100%\"},placeholder:\"Select Areas\"},countryOptions)),/*#__PURE__*/React.createElement(_Form.Item,{label:\"Under-reporting Cases:\",name:\"models\",rules:[{required:true,message:\"Please select reporting ratio!\"}]},/*#__PURE__*/React.createElement(_Select,{mode:\"multiple\",style:{width:\"100%\"},placeholder:\"Select Reporting Ratio\"},modelOptions)),/*#__PURE__*/React.createElement(_Form.Item,{label:\"Days to Predict\",name:\"days\",rules:[{required:true,message:\"Please select number of days!\"}]},/*#__PURE__*/React.createElement(_Slider,{min:0,initialValue:15,max:99,onAfterChange:this.onDaysToPredictChange})),/*#__PURE__*/React.createElement(_Tooltip,{title:\"The trend until March 18th has been used as a proxy for \\\"Social distancing off\\\".  For modeling details, please see: https://arxiv.org/abs/2004.11372\",placement:\"topLeft\"},/*#__PURE__*/React.createElement(_Form.Item,{label:\"Social Distancing\",name:\"socialDistancing\"},/*#__PURE__*/React.createElement(_Checkbox.Group,null,/*#__PURE__*/React.createElement(_Checkbox,{defaultChecked:true,value:\"distancingOn\"},\"On\"),/*#__PURE__*/React.createElement(_Checkbox,{value:\"distancingOff\"},\"Off\"))))),/*#__PURE__*/React.createElement(\"div\",null,\"Statistic:\\xA0\\xA0\",/*#__PURE__*/React.createElement(_Radio.Group,{value:statistic,onChange:this.handleStatisticSelect},/*#__PURE__*/React.createElement(_Radio,{value:\"cumulative\"},\"Cumulative Cases\"),/*#__PURE__*/React.createElement(_Radio,{value:\"delta\"},\"New Cases\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",null,\"Scale:\\xA0\\xA0\",/*#__PURE__*/React.createElement(_Radio.Group,{value:yScale,onChange:this.handleYScaleSelect},/*#__PURE__*/React.createElement(_Radio,{value:\"linear\"},\"linear\"),/*#__PURE__*/React.createElement(_Radio,{value:\"log\"},\"logarithmic\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Dynamic Map:\\xA0\\xA0\",/*#__PURE__*/React.createElement(_Switch,{onChange:this.switchDynamicMap}))),/*#__PURE__*/React.createElement(\"div\",{className:\"map-wrapper\"},/*#__PURE__*/React.createElement(Covid19Map,{triggerRef:this.bindRef,dynamicMapOn:this.state.dynamicMapOn,days:days,model:this.state.models==null||this.state.models.length===0?\"\":this.state.models[this.state.models.length-1],onMapClick:this.onMapClick}))),/*#__PURE__*/React.createElement(\"div\",{className:\"right-col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"graph-wrapper\"},/*#__PURE__*/React.createElement(Covid19Graph,{data:mainGraphData,statistic:statistic,yScale:yScale}))));}}]);return Covid19Predict;}(PureComponent);export default Covid19Predict;","map":{"version":3,"sources":["/Users/tianjianxu/Documents/GitHub/ReCOVER-COVID-19/frontend/src/covid19predict.js"],"names":["React","PureComponent","Covid19Graph","Covid19Map","ModelAPI","areaToStr","strToArea","modelToStr","test_data","InfoCircleOutlined","Option","Covid19Predict","props","handleYScaleSelect","e","setState","yScale","target","value","handleStatisticSelect","statistic","bindRef","ref","map","formRef","createRef","modelAPI","areas","allAreas","areasList","models","allModels","modelsList","state","distancingOn","distancingOff","mainGraphData","days","dynamicMapOn","addAreaByStr","bind","removeAreaByStr","onValuesChange","onMapClick","onDaysToPredictChange","switchDynamicMap","area","areaIsSelected","newAreaStr","includes","areaStr","areaObj","prevState","predict","country","data","current","setFieldsValue","targetAreaStr","filter","Object","keys","reduce","newMainGraphData","model","newModelStr","changedValues","allValues","socialDistancing","reloadAll","prevAreas","newAreas","areasToAdd","areasToRemove","forEach","length","fetchData","checked","countryOptions","sort","s","modelOptions","modelIsSelected","name","description","required","message","width"],"mappings":"o4DAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,KAAqC,OAArC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,SAAT,CAAoBC,SAApB,CAA+BC,UAA/B,KAAiD,eAAjD,CACA,OAASC,SAAT,KAA0B,aAA1B,CAeA,OACEC,kBADF,KAEO,mBAFP,C,GAIQC,CAAAA,M,SAAAA,M,IAEFC,CAAAA,c,wHAaJ,wBAAYC,KAAZ,CAAmB,gDACjB,uBAAMA,KAAN,EADiB,MAZnBC,kBAYmB,CAZE,SAAAC,CAAC,CAAI,CACxB,MAAKC,QAAL,CAAc,CACZC,MAAM,CAAEF,CAAC,CAACG,MAAF,CAASC,KADL,CAAd,EAGD,CAQkB,OANnBC,qBAMmB,CANK,SAAAL,CAAC,CAAI,CAC3B,MAAKC,QAAL,CAAc,CACZK,SAAS,CAAEN,CAAC,CAACG,MAAF,CAASC,KADR,CAAd,EAGD,CAEkB,OA4KnBG,OA5KmB,CA4KT,SAAAC,GAAG,CAAI,CACf,MAAKC,GAAL,CAAWD,GAAX,CACD,CA9KkB,CAGjB,MAAKE,OAAL,CAAexB,KAAK,CAACyB,SAAN,EAAf,CAEA,MAAKC,QAAL,CAAgB,GAAItB,CAAAA,QAAJ,EAAhB,CAEA,MAAKsB,QAAL,CAAcC,KAAd,CAAoB,SAAAC,QAAQ,QAC1B,OAAKb,QAAL,CAAc,CACZc,SAAS,CAAED,QADC,CAAd,CAD0B,EAA5B,EAMA,MAAKF,QAAL,CAAcI,MAAd,CAAqB,SAAAC,SAAS,QAC5B,OAAKhB,QAAL,CAAc,CACZiB,UAAU,CAAED,SADA,CAAd,CAD4B,EAA9B,EAMA,MAAKE,KAAL,CAAa,CACXN,KAAK,CAAE,MAAKf,KAAL,CAAWe,KAAX,EAAoB,EADhB,CAEXE,SAAS,CAAE,EAFA,CAGXC,MAAM,CAAE,MAAKlB,KAAL,CAAWkB,MAAX,EAAqB,EAHlB,CAIXE,UAAU,CAAE,EAJD,CAKXE,YAAY,CAAE,IALH,CAMXC,aAAa,CAAE,KANJ,CAOXC,aAAa,CAAE,EAPJ,CAQXC,IAAI,CAAE,EARK,CASXC,YAAY,CAAE,KATH,CAUXlB,SAAS,CAAE,YAVA,CAWXJ,MAAM,CAAE,QAXG,CAAb,CAcA,MAAKuB,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CACA,MAAKC,eAAL,CAAuB,MAAKA,eAAL,CAAqBD,IAArB,+BAAvB,CACA,MAAKE,cAAL,CAAsB,MAAKA,cAAL,CAAoBF,IAApB,+BAAtB,CACA,MAAKG,UAAL,CAAkB,MAAKA,UAAL,CAAgBH,IAAhB,+BAAlB,CACA,MAAKI,qBAAL,CAA6B,MAAKA,qBAAL,CAA2BJ,IAA3B,+BAA7B,CACA,MAAKK,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBL,IAAtB,+BAAxB,CAtCiB,aAuClB,C,yEAEUM,I,CAAM,CACf,GAAI,CAAC,KAAKC,cAAL,CAAoBD,IAApB,CAAL,CAAgC,CAC9B,KAAKP,YAAL,CAAkBlC,SAAS,CAACyC,IAAD,CAA3B,EACD,CACF,CAED;;2DAGeA,I,CAAM,CACnB,GAAI,KAAKb,KAAL,CAAWN,KAAX,EAAoBmB,IAAxB,CAA8B,CAC5B,GAAME,CAAAA,UAAU,CAAG3C,SAAS,CAACyC,IAAD,CAA5B,CACA,MAAO,MAAKb,KAAL,CAAWN,KAAX,CAAiBsB,QAAjB,CAA0BD,UAA1B,CAAP,CACD,CACD,MAAO,MAAP,CACD,C,kDAEYE,O,CAAS,iBACpB,GAAMC,CAAAA,OAAO,CAAG7C,SAAS,CAAC4C,OAAD,CAAzB,CAEA,KAAKnC,QAAL,CACE,SAAAqC,SAAS,QAAK,CACZzB,KAAK,8BAAMyB,SAAS,CAACzB,KAAhB,GAAuBuB,OAAvB,EADO,CAAL,EADX,CAIE,UAAM,CACJ,MAAI,CAACxB,QAAL,CAAc2B,OAAd,CACE,CACEpB,KAAK,CAAEkB,OAAO,CAAClB,KADjB,CAEEqB,OAAO,CAAEH,OAAO,CAACG,OAFnB,CAGExB,MAAM,CAAE,MAAI,CAACG,KAAL,CAAWH,MAHrB,CAIEO,IAAI,CAAE,MAAI,CAACJ,KAAL,CAAWI,IAJnB,CAKEH,YAAY,CAAE,MAAI,CAACD,KAAL,CAAWC,YAL3B,CAMEC,aAAa,CAAE,MAAI,CAACF,KAAL,CAAWE,aAN5B,CADF,CASE,SAAAoB,IAAI,CAAI,CACN,MAAI,CAACxC,QAAL,CAAc,SAAAqC,SAAS,QAAK,CAC1BhB,aAAa,kBACRgB,SAAS,CAAChB,aADF,oBAEVc,OAFU,CAEAK,IAFA,EADa,CAAL,EAAvB,EAMD,CAhBH,EAmBA,MAAI,CAAC/B,OAAL,CAAagC,OAAb,CAAqBC,cAArB,CAAoC,CAClC9B,KAAK,CAAE,MAAI,CAACM,KAAL,CAAWN,KADgB,CAApC,EAGD,CA3BH,EA6BD,C,wDAEe+B,a,CAAe,CAC7B,KAAK3C,QAAL,CAAc,SAAAqC,SAAS,CAAI,CACzB,MAAO,CACL;AACA;AACAzB,KAAK,CAAEyB,SAAS,CAACzB,KAAV,CAAgBgC,MAAhB,CAAuB,SAAAT,OAAO,QAAIA,CAAAA,OAAO,GAAKQ,aAAhB,EAA9B,CAHF,CAILtB,aAAa,CAAEwB,MAAM,CAACC,IAAP,CAAYT,SAAS,CAAChB,aAAtB,EACZuB,MADY,CACL,SAAAT,OAAO,QAAIA,CAAAA,OAAO,EAAIQ,aAAf,EADF,EAEZI,MAFY,CAEL,SAACC,gBAAD,CAAmBb,OAAnB,CAA+B,CACrC,wBACKa,gBADL,oBAEGb,OAFH,CAEaE,SAAS,CAAChB,aAAV,CAAwBc,OAAxB,CAFb,GAID,CAPY,CAOV,EAPU,CAJV,CAAP,CAaD,CAdD,EAeD,CAED;;6DAGgBc,K,CAAO,CACrB,GAAI,KAAK/B,KAAL,CAAWH,MAAX,EAAqBkC,KAAzB,CAAgC,CAC9B,GAAMC,CAAAA,WAAW,CAAG1D,UAAU,CAACyD,KAAD,CAA9B,CACA,MAAO,MAAK/B,KAAL,CAAWH,MAAX,CAAkBmB,QAAlB,CAA2BgB,WAA3B,CAAP,CACD,CACD,MAAO,MAAP,CACD,CAED;;;2DAIeC,a,CAAeC,S,CAAW,iBACvC,GAAI,oBAAsBD,CAAAA,aAAtB,EAAuC,UAAYA,CAAAA,aAAvD,CAAsE,CACpE;AACA;AACA;AAEA,KAAKnD,QAAL,CACE,CACEe,MAAM,CAAEqC,SAAS,CAACrC,MADpB,CAEEI,YAAY,CAAEiC,SAAS,CAACC,gBAAV,CAA2BnB,QAA3B,CAAoC,cAApC,CAFhB,CAGEd,aAAa,CAAEgC,SAAS,CAACC,gBAAV,CAA2BnB,QAA3B,CAAoC,eAApC,CAHjB,CADF,CAME,UAAM,CACJ,MAAI,CAACoB,SAAL,GACD,CARH,EAUD,CAfD,IAeO,CACL;AACA;AACA,GAAMC,CAAAA,SAAS,CAAG,KAAKrC,KAAL,CAAWN,KAA7B,CACA,GAAM4C,CAAAA,QAAQ,CAAGJ,SAAS,CAACxC,KAA3B,CAEA,GAAM6C,CAAAA,UAAU,CAAGD,QAAQ,CAACZ,MAAT,CACjB,SAAAT,OAAO,QAAI,CAACoB,SAAS,CAACrB,QAAV,CAAmBC,OAAnB,CAAL,EADU,CAAnB,CAGA,GAAMuB,CAAAA,aAAa,CAAGH,SAAS,CAACX,MAAV,CACpB,SAAAT,OAAO,QAAI,CAACqB,QAAQ,CAACtB,QAAT,CAAkBC,OAAlB,CAAL,EADa,CAAtB,CAIAsB,UAAU,CAACE,OAAX,CAAmB,KAAKnC,YAAxB,EACAkC,aAAa,CAACC,OAAd,CAAsB,KAAKjC,eAA3B,EACD,CACF,CAED;;;;yEAKsBJ,I,CAAM,iBAC1B,GAAMiC,CAAAA,SAAS,CAAG,KAAKrC,KAAL,CAAWN,KAA7B,CACA,KAAKZ,QAAL,CAAc,CAAEsB,IAAI,CAAJA,IAAF,CAAd,CAAwB,UAAM,CAC5B,MAAI,CAACgC,SAAL,GACD,CAFD,EAGD,CAED;mBAKA;;;+BAIY,iBACV,GAAMC,CAAAA,SAAS,CAAG,KAAKrC,KAAL,CAAWN,KAA7B,CACA,KAAKZ,QAAL,CACE,CACEY,KAAK,CAAE,EADT,CAEES,aAAa,CAAE,EAFjB,CADF,CAKE,UAAM,CACJ;AACAkC,SAAS,CAACI,OAAV,CAAkB,MAAI,CAACnC,YAAvB,EAEA;AACA;AACA,GAAI,MAAI,CAACN,KAAL,CAAWK,YAAX,EAA2B,MAAI,CAACL,KAAL,CAAWH,MAAX,CAAkB6C,MAAlB,GAA6B,CAA5D,CAA+D,CAC7D,MAAI,CAACpD,GAAL,CAASqD,SAAT,CAAmB,MAAI,CAAC3C,KAAL,CAAWK,YAA9B,EACD,CAEF,CAfH,EAiBD,C,0DAEgBuC,O,CAAS,CACxB,KAAK9D,QAAL,CAAc,CACZuB,YAAY,CAAEuC,OADF,CAAd,EAGA,KAAKtD,GAAL,CAASqD,SAAT,CAAmBC,OAAnB,EACD,C,uCAEQ,iCAUH,KAAK5C,KAVF,CAELN,KAFK,aAELA,KAFK,CAGLE,SAHK,aAGLA,SAHK,CAILG,UAJK,aAILA,UAJK,CAKLK,IALK,aAKLA,IALK,CAMLD,aANK,aAMLA,aANK,CAOLE,YAPK,aAOLA,YAPK,CAQLlB,SARK,aAQLA,SARK,CASLJ,MATK,aASLA,MATK,CAYP;AACA,GAAM8D,CAAAA,cAAc,CAAGjD,SAAS,CAC7B8B,MADoB,CACb,SAAAb,IAAI,QAAI,CAAC,MAAI,CAACC,cAAL,CAAoBD,IAApB,CAAL,EADS,EAEpBvB,GAFoB,CAEhBlB,SAFgB,EAGpB0E,IAHoB,GAIpBxD,GAJoB,CAIhB,SAAAyD,CAAC,CAAI,CACR,mBAAO,oBAAC,MAAD,EAAQ,GAAG,CAAEA,CAAb,MAAkBA,CAAlB,KAAP,CACD,CANoB,CAAvB,CAQA,GAAMC,CAAAA,YAAY,CAAGjD,UAAU,CAC5B2B,MADkB,CACX,SAAAK,KAAK,QAAI,CAAC,MAAI,CAACkB,eAAL,CAAqBlB,KAArB,CAAL,EADM,EAElBzC,GAFkB,CAEd,SAAAyC,KAAK,CAAI,CACZ,mBACE,oBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAK,CAACmB,IAAnB,eACE,8BAAS,KAAK,CAAEnB,KAAK,CAACoB,WAAtB,CAAmC,SAAS,CAAC,OAA7C,EACGpB,KAAK,CAACmB,IADT,CADF,CADF,CAOD,CAVkB,CAArB,CAYA,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,2BACE,GAAG,CAAE,KAAK3D,OADZ,CAEE,cAAc,CAAE,KAAKkB,cAFvB,CAGE,aAAa,CAAE,CACbf,KAAK,CAAEA,KADM,CAEbU,IAAI,CAAE,EAFO,CAGb+B,gBAAgB,CAAE,CAAC,cAAD,CAHL,CAHjB,eASE,0BAAM,IAAN,EACE,KAAK,CAAC,OADR,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAE,CAAC,CAAEiB,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,sBAA3B,CAAD,CAHT,eAKE,6BACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAFT,CAGE,WAAW,CAAC,cAHd,EAKGT,cALH,CALF,CATF,cAsBE,0BAAM,IAAN,EACE,KAAK,CAAC,wBADR,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAE,CACL,CAAEO,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,gCAA3B,CADK,CAHT,eAOE,6BACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAFT,CAGE,WAAW,CAAC,wBAHd,EAKGN,YALH,CAPF,CAtBF,cAqCE,0BAAM,IAAN,EACE,KAAK,CAAC,iBADR,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAE,CACL,CAAEI,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,+BAA3B,CADK,CAHT,eAOE,6BACE,GAAG,CAAE,CADP,CAEE,YAAY,CAAE,EAFhB,CAGE,GAAG,CAAE,EAHP,CAIE,aAAa,CAAE,KAAK1C,qBAJtB,EAPF,CArCF,cAoDE,8BACE,KAAK,CAAC,wJADR,CAGE,SAAS,CAAC,SAHZ,eAKA,0BAAM,IAAN,EAAW,KAAK,CAAC,mBAAjB,CAAqC,IAAI,CAAC,kBAA1C,eACE,8BAAU,KAAV,mBACE,+BAAU,cAAc,KAAxB,CAAyB,KAAK,CAAC,cAA/B,OADF,cAIE,+BAAU,KAAK,CAAC,eAAhB,QAJF,CADF,CALA,CApDF,CADF,cAsEE,iEACE,2BAAO,KAAP,EACE,KAAK,CAAExB,SADT,CAEE,QAAQ,CAAE,KAAKD,qBAFjB,eAIE,4BAAO,KAAK,CAAC,YAAb,qBAJF,cAKE,4BAAO,KAAK,CAAC,OAAb,cALF,CADF,CAtEF,cA+EE,8BA/EF,cAgFE,6DAEE,2BAAO,KAAP,EAAa,KAAK,CAAEH,MAApB,CAA4B,QAAQ,CAAE,KAAKH,kBAA3C,eACE,4BAAO,KAAK,CAAC,QAAb,WADF,cAEE,4BAAO,KAAK,CAAC,KAAb,gBAFF,CAFF,CAhFF,cAuFE,8BAvFF,cAwFE,iEAEE,6BACE,QAAQ,CAAE,KAAKgC,gBADjB,EAFF,CAxFF,CADF,cAgGE,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,UAAD,EACE,UAAU,CAAE,KAAKxB,OADnB,CAEE,YAAY,CAAE,KAAKY,KAAL,CAAWK,YAF3B,CAGE,IAAI,CAAED,IAHR,CAIE,KAAK,CAAE,KAAKJ,KAAL,CAAWH,MAAX,EAAqB,IAArB,EAA6B,KAAKG,KAAL,CAAWH,MAAX,CAAkB6C,MAAlB,GAA4B,CAAzD,CAA4D,EAA5D,CAAiE,KAAK1C,KAAL,CAAWH,MAAX,CAAkB,KAAKG,KAAL,CAAWH,MAAX,CAAkB6C,MAAlB,CAAyB,CAA3C,CAJ1E,CAKE,UAAU,CAAE,KAAKhC,UALnB,EADF,CAhGF,CADF,cA2GE,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,eAAf,eACE,oBAAC,YAAD,EACE,IAAI,CAAEP,aADR,CAEE,SAAS,CAAEhB,SAFb,CAGE,MAAM,CAAEJ,MAHV,EADF,CADF,CA3GF,CADF,CAuHD,C,4BArX0Bf,a,EAwX7B,cAAeU,CAAAA,cAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport Covid19Graph from \"./covid19graph\";\nimport Covid19Map from \"./covid19map\";\nimport ModelAPI from \"./modelapi\";\nimport { areaToStr, strToArea, modelToStr } from \"./covid19util\";\nimport { test_data } from \"./test_data\";\n\nimport {\n  Form,\n  Select,\n  InputNumber,\n  Button,\n  Radio,\n  Checkbox,\n  Slider,\n  Tooltip,\n  Switch,\n  Popconfirm,\n} from \"antd\";\n\nimport {\n  InfoCircleOutlined\n} from '@ant-design/icons';\n\nconst { Option } = Select;\n\nclass Covid19Predict extends PureComponent {\n  handleYScaleSelect = e => {\n    this.setState({\n      yScale: e.target.value\n    });\n  };\n\n  handleStatisticSelect = e => {\n    this.setState({\n      statistic: e.target.value\n    });\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef();\n\n    this.modelAPI = new ModelAPI();\n\n    this.modelAPI.areas(allAreas =>\n      this.setState({\n        areasList: allAreas\n      })\n    );\n\n    this.modelAPI.models(allModels =>\n      this.setState({\n        modelsList: allModels\n      })\n    );\n\n    this.state = {\n      areas: this.props.areas || [],\n      areasList: [],\n      models: this.props.models || [],\n      modelsList: [],\n      distancingOn: true,\n      distancingOff: false,\n      mainGraphData: {},\n      days: 10,\n      dynamicMapOn: false,\n      statistic: \"cumulative\",\n      yScale: \"linear\"\n    };\n\n    this.addAreaByStr = this.addAreaByStr.bind(this);\n    this.removeAreaByStr = this.removeAreaByStr.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n    this.onDaysToPredictChange = this.onDaysToPredictChange.bind(this);\n    this.switchDynamicMap = this.switchDynamicMap.bind(this);\n  }\n\n  onMapClick(area) {\n    if (!this.areaIsSelected(area)) {\n      this.addAreaByStr(areaToStr(area));\n    }\n  }\n\n  /**\n   * Returns true if the area is already selected by the user.\n   */\n  areaIsSelected(area) {\n    if (this.state.areas && area) {\n      const newAreaStr = areaToStr(area);\n      return this.state.areas.includes(newAreaStr);\n    }\n    return false;\n  }\n\n  addAreaByStr(areaStr) {\n    const areaObj = strToArea(areaStr);\n\n    this.setState(\n      prevState => ({\n        areas: [...prevState.areas, areaStr]\n      }),\n      () => {\n        this.modelAPI.predict(\n          {\n            state: areaObj.state,\n            country: areaObj.country,\n            models: this.state.models,\n            days: this.state.days,\n            distancingOn: this.state.distancingOn,\n            distancingOff: this.state.distancingOff\n          },\n          data => {\n            this.setState(prevState => ({\n              mainGraphData: {\n                ...prevState.mainGraphData,\n                [areaStr]: data\n              }\n            }));\n          }\n        );\n\n        this.formRef.current.setFieldsValue({\n          areas: this.state.areas\n        });\n      }\n    );\n  }\n\n  removeAreaByStr(targetAreaStr) {\n    this.setState(prevState => {\n      return {\n        // Filter out the area / graph data corresponding to the target area\n        // string.\n        areas: prevState.areas.filter(areaStr => areaStr !== targetAreaStr),\n        mainGraphData: Object.keys(prevState.mainGraphData)\n          .filter(areaStr => areaStr != targetAreaStr)\n          .reduce((newMainGraphData, areaStr) => {\n            return {\n              ...newMainGraphData,\n              [areaStr]: prevState.mainGraphData[areaStr]\n            };\n          }, {})\n      };\n    });\n  }\n\n  /**\n   * Returns true if the model is already selected by the user.\n   */\n  modelIsSelected(model) {\n    if (this.state.models && model) {\n      const newModelStr = modelToStr(model);\n      return this.state.models.includes(newModelStr);\n    }\n    return false;\n  }\n\n  /**\n   * onValuesChange is called whenever the values in the form change. Note that\n   * days to predict is handled separately by onDaysToPredictChange.\n   */\n  onValuesChange(changedValues, allValues) {\n    if (\"socialDistancing\" in changedValues || \"models\" in changedValues) {\n      // If either the social distancing or model parameters were changed, we\n      // clear our data and do a full reload. We purposely ignore days to\n      // predict here (see onDaysToPredictChange).\n\n      this.setState(\n        {\n          models: allValues.models,\n          distancingOn: allValues.socialDistancing.includes(\"distancingOn\"),\n          distancingOff: allValues.socialDistancing.includes(\"distancingOff\")\n        },\n        () => {\n          this.reloadAll();\n        }\n      );\n    } else {\n      // If we're here it means the user either added or deleted an area, so we\n      // can do a union / intersection to figure out what to add/remove.\n      const prevAreas = this.state.areas;\n      const newAreas = allValues.areas;\n\n      const areasToAdd = newAreas.filter(\n        areaStr => !prevAreas.includes(areaStr)\n      );\n      const areasToRemove = prevAreas.filter(\n        areaStr => !newAreas.includes(areaStr)\n      );\n\n      areasToAdd.forEach(this.addAreaByStr);\n      areasToRemove.forEach(this.removeAreaByStr);\n    }\n  }\n\n  /**\n   * onDaysToPredictChange is bound to the 'onAfterChange' prop for the\n   * slider component, so this function will only be called on the mouseup\n   * event (to reduce database load).\n   */\n  onDaysToPredictChange(days) {\n    const prevAreas = this.state.areas;\n    this.setState({ days }, () => {\n      this.reloadAll();\n    });\n  }\n\n  // Set the reference to the map component as a child-component.\n  bindRef = ref => { \n    this.map = ref \n  }\n\n  /**\n   * reloadAll refreshes the prediction data for all currently-selected\n   * countries.\n   */\n  reloadAll() {\n    const prevAreas = this.state.areas;\n    this.setState(\n      {\n        areas: [],\n        mainGraphData: {}\n      },\n      () => {\n        // Add all the areas back.\n        prevAreas.forEach(this.addAreaByStr);\n\n        // TODO: Add code for stuff after reload here!\n        // Force reload the heatmap\n        if (this.state.dynamicMapOn && this.state.models.length !== 0) {\n          this.map.fetchData(this.state.dynamicMapOn);\n        }\n\n      }\n    );\n  }\n\n  switchDynamicMap(checked) {\n    this.setState({\n      dynamicMapOn: checked\n    });\n    this.map.fetchData(checked);\n  }\n\n  render() {\n    const {\n      areas,\n      areasList,\n      modelsList,\n      days,\n      mainGraphData,\n      dynamicMapOn,\n      statistic,\n      yScale\n    } = this.state;\n\n    // Only show options for countries that have not been selected yet.\n    const countryOptions = areasList\n      .filter(area => !this.areaIsSelected(area))\n      .map(areaToStr)\n      .sort()\n      .map(s => {\n        return <Option key={s}> {s} </Option>;\n      });\n\n    const modelOptions = modelsList\n      .filter(model => !this.modelIsSelected(model))\n      .map(model => {\n        return (\n          <Option key={model.name}>\n            <Tooltip title={model.description} placement=\"right\">\n              {model.name}\n            </Tooltip>\n          </Option>\n        );\n      });\n\n    return (\n      <div className=\"covid-19-predict\">\n        <div className=\"left-col\">\n          <div className=\"form-wrapper\">\n            <Form\n              ref={this.formRef}\n              onValuesChange={this.onValuesChange}\n              initialValues={{\n                areas: areas,\n                days: 10,\n                socialDistancing: [\"distancingOn\"]\n              }}\n            >\n              <Form.Item\n                label=\"Areas\"\n                name=\"areas\"\n                rules={[{ required: true, message: \"Please select areas!\" }]}\n              >\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Select Areas\"\n                >\n                  {countryOptions}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                label=\"Under-reporting Cases:\"\n                name=\"models\"\n                rules={[\n                  { required: true, message: \"Please select reporting ratio!\" }\n                ]}\n              >\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Select Reporting Ratio\"\n                >\n                  {modelOptions}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                label=\"Days to Predict\"\n                name=\"days\"\n                rules={[\n                  { required: true, message: \"Please select number of days!\" }\n                ]}\n              >\n                <Slider\n                  min={0}\n                  initialValue={15}\n                  max={99}\n                  onAfterChange={this.onDaysToPredictChange}\n                />\n              </Form.Item>\n\n              <Tooltip\n                title='The trend until March 18th has been used as a proxy for \"Social distancing off\". \n                For modeling details, please see: https://arxiv.org/abs/2004.11372' \n                placement=\"topLeft\"\n              >\n              <Form.Item label=\"Social Distancing\" name=\"socialDistancing\">\n                <Checkbox.Group>\n                  <Checkbox defaultChecked value=\"distancingOn\">\n                    On\n                  </Checkbox>\n                  <Checkbox value=\"distancingOff\"> \n                    Off\n                  </Checkbox>\n                </Checkbox.Group>\n              </Form.Item>\n              </Tooltip>\n            </Form>\n            <div>Statistic:&nbsp;&nbsp;  \n              <Radio.Group\n                value={statistic}\n                onChange={this.handleStatisticSelect}\n              >\n                <Radio value=\"cumulative\">Cumulative Cases</Radio>\n                <Radio value=\"delta\">New Cases</Radio>\n              </Radio.Group>\n            </div>\n            <br />\n            <div>\n              Scale:&nbsp;&nbsp;  \n              <Radio.Group value={yScale} onChange={this.handleYScaleSelect}>\n                <Radio value=\"linear\">linear</Radio>\n                <Radio value=\"log\">logarithmic</Radio>\n              </Radio.Group>\n            </div>\n            <br />\n            <p>\n              Dynamic Map:&nbsp;&nbsp;  \n              <Switch \n                onChange={this.switchDynamicMap} \n              />\n            </p>\n          </div>\n          <div className=\"map-wrapper\">\n            <Covid19Map\n              triggerRef={this.bindRef}\n              dynamicMapOn={this.state.dynamicMapOn}\n              days={days}\n              model={this.state.models == null || this.state.models.length ===0? \"\" : this.state.models[this.state.models.length-1]}\n              onMapClick={this.onMapClick} \n            />\n          </div>\n        </div>\n        <div className=\"right-col\">\n          <div className=\"graph-wrapper\">\n            <Covid19Graph\n              data={mainGraphData}\n              statistic={statistic}\n              yScale={yScale}\n            ></Covid19Graph>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Covid19Predict;\n"]},"metadata":{},"sourceType":"module"}